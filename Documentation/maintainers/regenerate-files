#!/bin/bash

# Make sure that all systems have the same sort order and date format
export LC_ALL=C

# change directory to script location
cd "$(dirname $0)"

SCRIPT=$(basename $0)
HEADER="# Autogenerated by ${SCRIPT}, DO NOT EDIT."

KF_RELEASES="5.17 5.18 5.19"
KF_RELEASE=${KF_RELEASE:-5.17}

PLASMA_RELEASES="5.4 5.5"
PLASMA_RELEASE=${PLASMA_RELEASE:-5.4}

APPS_RELEASES=""
APPS_RELEASE=${APPS_RELEASE:-15.08}

# regenerate keywords
pushd ../package.accept_keywords/ > /dev/null
for release in $KF_RELEASES; do
	echo -e "${HEADER}" > "kde-frameworks-${release}.keywords"
	if [[ -d ".kde-frameworks-${release}" ]]; then
		cat ".kde-frameworks-${release}/"* | grep -P -v '^>=kde-frameworks/(?!kf-env)' |sed '/^~.*[.-]9999$/s/$/ **/' >> "kde-frameworks-${release}.keywords"
	fi
done

for release in $PLASMA_RELEASES; do
	echo -e "${HEADER}" > "kde-plasma-${release}.keywords"
	if [[ -d ".kde-plasma-${release}" ]]; then
		cat ".kde-plasma-${release}/"* | sed '/^~.*[.-]9999$/s/$/ **/' >> "kde-plasma-${release}.keywords"
	fi
done

for release in $APPS_RELEASES; do
	echo -e "${HEADER}" > "kde-applications-${release}.keywords"
	if [[ -d ".kde-applications-${release}" ]]; then
		cat ".kde-applications-${release}/"* | sed '/^~.*[.-]9999$/s/$/ **/' >> "kde-applications-${release}.keywords"
	fi
done

# ... and for completely unkeyworded packages, add "**"
for release in $APP_RELEASES; do
	if [[ -d ".kde-applications-${release}" ]]; then
		rm -rf ".kde-applications-${release}.49.9999"
		mkdir -p ".kde-applications-${release}.49.9999"
		echo -e "${HEADER}" > "kde-applications-${release}.49.9999.keywords"
		for file in ".kde-applications-${release}"/*; do
			newfile=".kde-applications-${release}.49.9999"/$(basename "${file}")
			sed "/^<kde-apps\/.*\.50$/{s/\.50/.49.9999/;s/^</~/};/^~.*[.-]9999$/s/$/ **/" "${file}" > "${newfile}"
			# echo "${newfile}"
		done
		cat ".kde-applications-${release}.49.9999"/* >> "kde-applications-${release}.49.9999.keywords"
	fi
done

if [[ -d .kde-frameworks-live.base ]]; then
	rm -rf .kde-frameworks-live
	mkdir -p .kde-frameworks-live
	echo -e "${HEADER}" > kde-frameworks-live.keywords
	for file in .kde-frameworks-live.base/*; do
		newfile=.kde-frameworks-live/$(basename "${file}")
		sed '/^~.*[.-]9999$/s/$/ **/' "${file}" > "${newfile}"
	done
	cat .kde-frameworks-live/* >> kde-frameworks-live.keywords
fi

if [[ -d .kde-plasma-live.base ]]; then
	rm -rf .kde-plasma-live
	mkdir -p .kde-plasma-live
	echo -e "${HEADER}" > kde-plasma-live.keywords
	for file in .kde-plasma-live.base/*; do
		newfile=.kde-plasma-live/$(basename "${file}")
		sed '/^~.*[.-]9999$/s/$/ **/' "${file}" > "${newfile}"
	done
	cat .kde-plasma-live/* >> kde-plasma-live.keywords
fi

if [[ -d .kde-applications-live.base ]]; then
	rm -rf .kde-applications-live
	mkdir -p .kde-applications-live
	echo -e "${HEADER}" > kde-applications-live.keywords
	for file in .kde-applications-live.base/*; do
		newfile=.kde-applications-live/$(basename "${file}")
		sed '/^~.*[.-]9999$/s/$/ **/' "${file}" > "${newfile}"
	done
	cat .kde-applications-live/* >> kde-applications-live.keywords
fi

# keywords for miscleanous packages from package.unmask/
for misc in kde-extras-live; do
	if [[ -f "../package.unmask/${misc}" ]]; then
		echo -e "${HEADER}" > "${misc}.keywords"
		sed '/^~.*[.-]9999$/s/$/ **/' "../package.unmask/${misc}" >> "${misc}.keywords"
	fi
done
popd > /dev/null

# regenerate unmask entries (base for package mask)
pushd ../package.unmask/ > /dev/null
for release in $KF_RELEASES live; do
	echo -e "${HEADER}" > "kde-frameworks-${release}"
	if [[ -d ".kde-frameworks-${release}" ]]; then
		cat ".kde-frameworks-${release}/"* | grep -P -v '^>=kde-frameworks/(?!kf-env)' >> "kde-frameworks-${release}"
	fi
done

for release in $PLASMA_RELEASES live; do
	echo -e "${HEADER}" > "kde-plasma-${release}"
	if [[ -d ".kde-plasma-${release}" ]]; then
		cat ".kde-plasma-${release}/"* >> "kde-plasma-${release}"
	fi
done

for release in $APPS_RELEASES live; do
	echo -e "${HEADER}" > "kde-applications-${release}"
	if [[ -d ".kde-applications-${release}" ]]; then
		cat ".kde-applications-${release}/"* >> "kde-applications-${release}"
	fi
done
popd > /dev/null

# regenerate mask entries (base for package mask)
pushd ../package.mask/ > /dev/null
for release in $KF_RELEASES live; do
	echo -e "${HEADER}" > "kde-frameworks-${release}"
	if [[ -d "../package.unmask/.kde-frameworks-${release}" ]]; then
		cat "../package.unmask/.kde-frameworks-${release}/"* | grep -P -v '^>=kde-frameworks/(?!kf-env)' >> "kde-frameworks-${release}"
		sed -i "kde-frameworks-${release}" -e "/^<kde-frameworks\/.*-5\..\.50:5$/{s/-5\..\.50/-${release}/;s/^</>=/}"
	fi
done

for release in $PLASMA_RELEASES live; do
	echo -e "${HEADER}" > "kde-plasma-${release}"
	if [[ -d "../package.unmask/.kde-plasma-${release}" ]]; then
		cat "../package.unmask/.kde-plasma-${release}/"* >> "kde-plasma-${release}"
		sed -i "kde-plasma-${release}" -e "/^<kde-plasma\/.*-5\..\.50:5$/{s/-5\..\.50/-${release}/;s/^</>=/}"
	fi
done

for release in $APPS_RELEASES live; do
	echo -e "${HEADER}" > "kde-applications-${release}"
	if [[ -d "../package.unmask/.kde-applications-${release}" ]]; then
		cat "../package.unmask/.kde-applications-${release}/"* >> "kde-applications-${release}"
		sed -i "kde-applications-${release}" -e "/^<kde-applications\/.*-14\..\.50:5$/{s/-14\..\.50/-${release}/;s/^</>=/}"
	fi
done
popd > /dev/null

# regenerate unversioned sets
pushd ../../sets/ > /dev/null
for set in *frameworks-${KF_RELEASE}; do
	newfile=${set/%-${KF_RELEASE}}
	echo -e "${HEADER}" > "${newfile}"
	sed -r "/@/s/-${KF_RELEASE}//g;/9999$/s/~//;s/<//;\@kde-frameworks/@s/-(9999|5\...\.50)//" "${set}" >> "${newfile}"
done

for set in *plasma-${PLASMA_RELEASE}; do
	newfile=${set/%-${PLASMA_RELEASE}}
	echo -e "${HEADER}" > "${newfile}"
	sed -r "/@/s/-${PLASMA_RELEASE}//g;/9999$/s/~//;s/<//;\@kde-plasma/@s/-(9999|5\..\.50)//" "${set}" >> "${newfile}"
done

#for set in *-${APPS_RELEASE}; do
#	newfile=${set/%-${APPS_RELEASE}}
#	echo -e "${HEADER}" > "${newfile}"
#	sed -r "/@/s/-${RELEASE}//g;/9999$/s/~//;s/<//;\@kde-apps/@s/-(9999|4\...\.50)/:4/" "${set}" >> "${newfile}"
#done
popd > /dev/null

# regenerate CONTRIBUTORS file
pushd ../ > /dev/null
newfile="CONTRIBUTORS"
echo -e "${HEADER}" > "${newfile}"
git log --all --format='%aN <%aE>' | sort -u >> "${newfile}"
popd > /dev/null
